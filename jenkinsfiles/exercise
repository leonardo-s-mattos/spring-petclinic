#!/bin/env groovy

pipeline {
    agent any
    environment {
    	GITHUB_CREDENTIALS = credentials('LEO_GITHUB_CREDENTIALS')
    	IMAGE = "liatrio/petclinic-tomcat"
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building......'
                sh 'mvn -B -DskipTests clean install'
            }
        }
        stage('Unit Test') {
            steps {
                echo 'Unit Testing.....'

	                sh 'mvn test'
            }

            post {
                always {
                    junit allowEmptyResults: true, testResults: 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Test coverage validation'){
    		steps {
		            sh "mvn verify cobertura:cobertura -amd -T 1.5C"
                    //cobertura()
				}

        }
        stage ('Quality & Security Control') {
        	failFast true
            parallel {
		        stage('Quality Scan'){
		        	steps {

						echo 'Running quality scan with Sonar..... '
                        sh 'sleep 4'
		            	
					}
		        }
		        stage('Security Fortify Scan'){
		        	steps {
		        		echo 'Running local fortify scan......'
                        sh 'sleep 2'

					}
		        }
		        stage('Security Blackduck Scan') {
		            steps {
		                echo 'Running OSS Scan ..........'
                        sh 'sleep 5'

		            }
		        }
			}
	    }
	    stage('Package') {
              agent any
              steps {
                script {
                  sh 'mvn install'
                  if ( env.BRANCH_NAME == 'master' ) {
                    pom = readMavenPom file: 'pom.xml'
                    TAG = pom.version
                  } else {
                    TAG = env.BRANCH_NAME
                  }
                  sh "docker build -t ${env.IMAGE}:${TAG} ."
                }
              }
            }
        
        stage('Deploy to Dev') {
            steps {
                echo 'Deploying....'               
                sh 'docker rm -f petclinic-tomcat-temp || true'
                sh "docker run -d -p 9966:8080 --name petclinic-tomcat-temp ${env.IMAGE}:${TAG}"
            }
            post {
                always {
                    echo 'Call health check endpoint....'
                    sh 'sleep 2'
                }
            }
        }
        stage ('Validate Deploy to dev') {
            failFast true
            parallel {
            stage('Healthcheck') {
                steps {
                    echo 'Call health check endpoint....'
                    sh 'sleep 1'
                }
            }

            stage('Run Smoke Tests on dev') {
                steps {
                    echo 'Run Smoke tests on dev......'
                    sh "cd regression-suite"
                    sh "mvn clean -B test -DPETCLINIC_URL=http://dev-petclinic:8080/petclinic/"
                    echo "Should be accessible at http://localhost:18888/petclinic"
                }
            }

            stage('API Service Test') {
                steps {
                    echo 'Call API test with Postman....'
                    sh 'sleep 7'
                }
            }
            }
        }
  		
  		stage('Deploy to Test') {
            steps {
                echo 'Deploy to test environment....'
                sh 'sleep 6'
            }
        }

        stage ('Validate Deploy to test') {
            failFast true
            parallel {
                stage('Healthcheck test') {
                    steps {
                        echo 'Call health check endpoint....'
                        sh 'sleep 1'
                    }
                }

                stage('Run Smoke Tests on test') {
                    steps {
                        echo 'Run Smoke tests on test......'
                        sh 'sleep 4'
                    }
                }

            }
        }


        
        stage ('Acceptance') {
        	failFast true
            parallel {
		        
		        stage('Run Functional Tests'){
		    		steps {
		    			echo 'Run functional tests........'
                        sh 'sleep 8'
		    		}    	
		        }
		        stage('Run Performance Tests'){
		        	steps {
		        		echo 'Run performance tests with executePerformanceJMeterTests...........'
                        sh 'sleep 10'
						}
		        }

		       
			}
	    }
	    
	    stage('Deploy to prod?'){
            steps {
                input(
                    message: 'Do you want to publish a new version of the library in A?'
                )              
            }
	    }
	    
	    stage('Create Tag') {
            steps {
                echo 'Create GitHub Tag....  with...'
                sh 'sleep 1'
                            
            }
        }
        
        stage('Create Change Management App Ticket') {
            steps {
                echo 'create change management ticket in ServiceNow....... '
                sh 'sleep 4'
            }
        }
        
  		stage('Deploy to Prod - Pool A Blue') {
            steps {
                echo 'Deploy to prod A Blue environment....'
                 echo 'Validate Deploy with ......executeHealthCheck'
                sh 'sleep 4'
            }
        }

        stage('Run Smoke Tests on A Blue') {
            steps {
                echo 'Run Smoke tests on prod A Blue......'
                sh 'sleep 2'
            }
        }

        stage('Deploy to Prod - Pool A Green') {
            steps {
                echo 'Deploy to prod A Green environment....'
                echo 'Validate Deploy with ......executeHealthCheck'
                sh 'sleep 4'
            }
        }

        stage('Run Smoke Tests on A Grenn') {
            steps {
                echo 'Run Smoke tests on prod A Green......'
                sh 'sleep 2'
            }
        }

        stage('Notify Build Status on A') {
            steps {
                echo 'Notify Build Status on Slack.......'
                sh 'sleep 1'
            }

        }

        stage('Deploy to prod B?'){
            steps {
                input(
                        message: 'Do you want to publish a new version of the library on B?'
                )
            }
        }

        stage('Deploy to Prod - Pool B Blue') {
            steps {
                echo 'Deploy to prod A Blue environment....'
                echo 'Validate Deploy with ......executeHealthCheck'
                sh 'sleep 4'
            }
        }

        stage('Run Smoke Tests on B Blue') {
            steps {
                echo 'Run Smoke tests on prod B Green......'
                sh 'sleep 2'
            }
        }

        stage('Deploy to Prod - Pool B Grenn') {
            steps {
                echo 'Deploy to prod A Blue environment....'
                echo 'Validate Deploy with ......executeHealthCheck'
                sh 'sleep 4'
            }
        }

        stage('Run Smoke Tests on B Green') {\
            steps {
                echo 'Run Smoke tests on prod B Green......'
                sh 'sleep 2'
            }
        }
        
  		stage('Notify Build Status on B') {
  			steps {
                echo 'Notify Build Status on Slack.......'
                sh 'sleep 1'
            }
  		
  		}
  		
    }
}
